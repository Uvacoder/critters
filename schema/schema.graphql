### This file was generated by Nexus Schema
### Do not make changes to this file directly


input AccountCreateManyUserInput {
  access_token: String
  expires_at: Int
  id: String
  id_token: String
  oauth_token: String
  oauth_token_secret: String
  provider: String!
  providerAccountId: String!
  refresh_token: String
  scope: String
  session_state: String
  token_type: String
  type: String!
}

input AccountCreateManyUserInputEnvelope {
  data: [AccountCreateManyUserInput!]
  skipDuplicates: Boolean
}

input AccountCreateNestedManyWithoutUserInput {
  connect: [AccountWhereUniqueInput!]
  connectOrCreate: [AccountCreateOrConnectWithoutUserInput!]
  create: [AccountCreateWithoutUserInput!]
  createMany: AccountCreateManyUserInputEnvelope
}

input AccountCreateOrConnectWithoutUserInput {
  create: AccountCreateWithoutUserInput!
  where: AccountWhereUniqueInput!
}

input AccountCreateWithoutUserInput {
  access_token: String
  expires_at: Int
  id: String
  id_token: String
  oauth_token: String
  oauth_token_secret: String
  provider: String!
  providerAccountId: String!
  refresh_token: String
  scope: String
  session_state: String
  token_type: String
  type: String!
}

input AccountProviderProviderAccountIdCompoundUniqueInput {
  provider: String!
  providerAccountId: String!
}

input AccountScalarWhereInput {
  AND: [AccountScalarWhereInput!]
  NOT: [AccountScalarWhereInput!]
  OR: [AccountScalarWhereInput!]
  access_token: StringNullableFilter
  expires_at: IntNullableFilter
  id: StringFilter
  id_token: StringNullableFilter
  oauth_token: StringNullableFilter
  oauth_token_secret: StringNullableFilter
  provider: StringFilter
  providerAccountId: StringFilter
  refresh_token: StringNullableFilter
  scope: StringNullableFilter
  session_state: StringNullableFilter
  token_type: StringNullableFilter
  type: StringFilter
  userId: StringFilter
}

input AccountUpdateManyMutationInput {
  access_token: NullableStringFieldUpdateOperationsInput
  expires_at: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  id_token: NullableStringFieldUpdateOperationsInput
  oauth_token: NullableStringFieldUpdateOperationsInput
  oauth_token_secret: NullableStringFieldUpdateOperationsInput
  provider: StringFieldUpdateOperationsInput
  providerAccountId: StringFieldUpdateOperationsInput
  refresh_token: NullableStringFieldUpdateOperationsInput
  scope: NullableStringFieldUpdateOperationsInput
  session_state: NullableStringFieldUpdateOperationsInput
  token_type: NullableStringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input AccountUpdateManyWithWhereWithoutUserInput {
  data: AccountUpdateManyMutationInput!
  where: AccountScalarWhereInput!
}

input AccountUpdateManyWithoutUserInput {
  connect: [AccountWhereUniqueInput!]
  connectOrCreate: [AccountCreateOrConnectWithoutUserInput!]
  create: [AccountCreateWithoutUserInput!]
  createMany: AccountCreateManyUserInputEnvelope
  delete: [AccountWhereUniqueInput!]
  deleteMany: [AccountScalarWhereInput!]
  disconnect: [AccountWhereUniqueInput!]
  set: [AccountWhereUniqueInput!]
  update: [AccountUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [AccountUpdateManyWithWhereWithoutUserInput!]
  upsert: [AccountUpsertWithWhereUniqueWithoutUserInput!]
}

input AccountUpdateWithWhereUniqueWithoutUserInput {
  data: AccountUpdateWithoutUserInput!
  where: AccountWhereUniqueInput!
}

input AccountUpdateWithoutUserInput {
  access_token: NullableStringFieldUpdateOperationsInput
  expires_at: NullableIntFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  id_token: NullableStringFieldUpdateOperationsInput
  oauth_token: NullableStringFieldUpdateOperationsInput
  oauth_token_secret: NullableStringFieldUpdateOperationsInput
  provider: StringFieldUpdateOperationsInput
  providerAccountId: StringFieldUpdateOperationsInput
  refresh_token: NullableStringFieldUpdateOperationsInput
  scope: NullableStringFieldUpdateOperationsInput
  session_state: NullableStringFieldUpdateOperationsInput
  token_type: NullableStringFieldUpdateOperationsInput
  type: StringFieldUpdateOperationsInput
}

input AccountUpsertWithWhereUniqueWithoutUserInput {
  create: AccountCreateWithoutUserInput!
  update: AccountUpdateWithoutUserInput!
  where: AccountWhereUniqueInput!
}

input AccountWhereUniqueInput {
  id: String
  provider_providerAccountId: AccountProviderProviderAccountIdCompoundUniqueInput
}

input BoolFieldUpdateOperationsInput {
  set: Boolean
}

type Critter {
  id: String!
  images: [String!]!
  name: String!
}

input CritterCreateNestedOneWithoutPostInput {
  connect: CritterWhereUniqueInput
  connectOrCreate: CritterCreateOrConnectWithoutPostInput
  create: CritterCreateWithoutPostInput
}

input CritterCreateOrConnectWithoutPostInput {
  create: CritterCreateWithoutPostInput!
  where: CritterWhereUniqueInput!
}

input CritterCreateWithoutPostInput {
  id: String
  images: CritterCreateimagesInput
  name: String!
  postId: String
  species: String!
}

input CritterCreateimagesInput {
  set: [String!]
}

input CritterUpdateOneWithoutPostInput {
  connect: CritterWhereUniqueInput
  connectOrCreate: CritterCreateOrConnectWithoutPostInput
  create: CritterCreateWithoutPostInput
  delete: Boolean
  disconnect: Boolean
  update: CritterUpdateWithoutPostInput
  upsert: CritterUpsertWithoutPostInput
}

input CritterUpdateWithoutPostInput {
  id: StringFieldUpdateOperationsInput
  images: CritterUpdateimagesInput
  name: StringFieldUpdateOperationsInput
  postId: NullableStringFieldUpdateOperationsInput
  species: StringFieldUpdateOperationsInput
}

input CritterUpdateimagesInput {
  push: String
  set: [String!]
}

input CritterUpsertWithoutPostInput {
  create: CritterCreateWithoutPostInput!
  update: CritterUpdateWithoutPostInput!
}

input CritterWhereUniqueInput {
  id: String
}

scalar DateTime

input DateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input DateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input EnumStatusFieldUpdateOperationsInput {
  set: Status
}

input IntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

type Mutation {
  createOnePost(data: PostCreateInput!): Post!
  deleteOnePost(where: PostWhereUniqueInput!): Post
  updateOnePost(data: PostUpdateInput!, where: PostWhereUniqueInput!): Post
}

input NestedDateTimeFilter {
  equals: DateTime
  gt: DateTime
  gte: DateTime
  in: [DateTime!]
  lt: DateTime
  lte: DateTime
  not: NestedDateTimeFilter
  notIn: [DateTime!]
}

input NestedIntNullableFilter {
  equals: Int
  gt: Int
  gte: Int
  in: [Int!]
  lt: Int
  lte: Int
  not: NestedIntNullableFilter
  notIn: [Int!]
}

input NestedStringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input NestedStringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

input NullableDateTimeFieldUpdateOperationsInput {
  set: DateTime
}

input NullableIntFieldUpdateOperationsInput {
  decrement: Int
  divide: Int
  increment: Int
  multiply: Int
  set: Int
}

input NullableStringFieldUpdateOperationsInput {
  set: String
}

type Post {
  critter: Critter
  dateFound: String
  dateMissing: String
  description: String!
  id: String!
  location: String!
  reward: Boolean!
  rewardAmount: Int
  title: String!
}

input PostCreateInput {
  createdAt: DateTime
  critter: CritterCreateNestedOneWithoutPostInput
  dateFound: String
  dateMissing: String
  description: String!
  id: String
  location: String!
  reward: Boolean
  rewardAmount: Int
  status: Status!
  title: String!
  updatedAt: DateTime
  user: UserCreateNestedOneWithoutPostsInput
}

input PostUpdateInput {
  createdAt: DateTimeFieldUpdateOperationsInput
  critter: CritterUpdateOneWithoutPostInput
  dateFound: NullableStringFieldUpdateOperationsInput
  dateMissing: NullableStringFieldUpdateOperationsInput
  description: StringFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  location: StringFieldUpdateOperationsInput
  reward: BoolFieldUpdateOperationsInput
  rewardAmount: NullableIntFieldUpdateOperationsInput
  status: EnumStatusFieldUpdateOperationsInput
  title: StringFieldUpdateOperationsInput
  updatedAt: DateTimeFieldUpdateOperationsInput
  user: UserUpdateOneWithoutPostsInput
}

input PostWhereUniqueInput {
  critterId: String
  id: String
  title: String
}

type Query {
  post(where: PostWhereUniqueInput!): Post
  posts(cursor: PostWhereUniqueInput, skip: Int, take: Int): [Post!]!
  user(where: UserWhereUniqueInput!): User
  users(cursor: UserWhereUniqueInput, skip: Int, take: Int): [User!]!
}

enum QueryMode {
  default
  insensitive
}

input SessionCreateManyUserInput {
  expires: DateTime!
  id: String
  sessionToken: String!
}

input SessionCreateManyUserInputEnvelope {
  data: [SessionCreateManyUserInput!]
  skipDuplicates: Boolean
}

input SessionCreateNestedManyWithoutUserInput {
  connect: [SessionWhereUniqueInput!]
  connectOrCreate: [SessionCreateOrConnectWithoutUserInput!]
  create: [SessionCreateWithoutUserInput!]
  createMany: SessionCreateManyUserInputEnvelope
}

input SessionCreateOrConnectWithoutUserInput {
  create: SessionCreateWithoutUserInput!
  where: SessionWhereUniqueInput!
}

input SessionCreateWithoutUserInput {
  expires: DateTime!
  id: String
  sessionToken: String!
}

input SessionScalarWhereInput {
  AND: [SessionScalarWhereInput!]
  NOT: [SessionScalarWhereInput!]
  OR: [SessionScalarWhereInput!]
  expires: DateTimeFilter
  id: StringFilter
  sessionToken: StringFilter
  userId: StringFilter
}

input SessionUpdateManyMutationInput {
  expires: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  sessionToken: StringFieldUpdateOperationsInput
}

input SessionUpdateManyWithWhereWithoutUserInput {
  data: SessionUpdateManyMutationInput!
  where: SessionScalarWhereInput!
}

input SessionUpdateManyWithoutUserInput {
  connect: [SessionWhereUniqueInput!]
  connectOrCreate: [SessionCreateOrConnectWithoutUserInput!]
  create: [SessionCreateWithoutUserInput!]
  createMany: SessionCreateManyUserInputEnvelope
  delete: [SessionWhereUniqueInput!]
  deleteMany: [SessionScalarWhereInput!]
  disconnect: [SessionWhereUniqueInput!]
  set: [SessionWhereUniqueInput!]
  update: [SessionUpdateWithWhereUniqueWithoutUserInput!]
  updateMany: [SessionUpdateManyWithWhereWithoutUserInput!]
  upsert: [SessionUpsertWithWhereUniqueWithoutUserInput!]
}

input SessionUpdateWithWhereUniqueWithoutUserInput {
  data: SessionUpdateWithoutUserInput!
  where: SessionWhereUniqueInput!
}

input SessionUpdateWithoutUserInput {
  expires: DateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  sessionToken: StringFieldUpdateOperationsInput
}

input SessionUpsertWithWhereUniqueWithoutUserInput {
  create: SessionCreateWithoutUserInput!
  update: SessionUpdateWithoutUserInput!
  where: SessionWhereUniqueInput!
}

input SessionWhereUniqueInput {
  id: String
  sessionToken: String
}

enum Status {
  FOUND
  LOST
}

input StringFieldUpdateOperationsInput {
  set: String
}

input StringFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringFilter
  notIn: [String!]
  startsWith: String
}

input StringNullableFilter {
  contains: String
  endsWith: String
  equals: String
  gt: String
  gte: String
  in: [String!]
  lt: String
  lte: String
  mode: QueryMode
  not: NestedStringNullableFilter
  notIn: [String!]
  startsWith: String
}

type User {
  email: String
  id: String!
  image: String
  name: String
}

input UserCreateNestedOneWithoutPostsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPostsInput
  create: UserCreateWithoutPostsInput
}

input UserCreateOrConnectWithoutPostsInput {
  create: UserCreateWithoutPostsInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutPostsInput {
  accounts: AccountCreateNestedManyWithoutUserInput
  createdAt: DateTime
  email: String
  emailVerified: DateTime
  id: String
  image: String
  name: String
  phone: String
  postId: String
  sessions: SessionCreateNestedManyWithoutUserInput
  updatedAt: DateTime
}

input UserUpdateOneWithoutPostsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutPostsInput
  create: UserCreateWithoutPostsInput
  delete: Boolean
  disconnect: Boolean
  update: UserUpdateWithoutPostsInput
  upsert: UserUpsertWithoutPostsInput
}

input UserUpdateWithoutPostsInput {
  accounts: AccountUpdateManyWithoutUserInput
  createdAt: DateTimeFieldUpdateOperationsInput
  email: NullableStringFieldUpdateOperationsInput
  emailVerified: NullableDateTimeFieldUpdateOperationsInput
  id: StringFieldUpdateOperationsInput
  image: NullableStringFieldUpdateOperationsInput
  name: NullableStringFieldUpdateOperationsInput
  phone: NullableStringFieldUpdateOperationsInput
  postId: NullableStringFieldUpdateOperationsInput
  sessions: SessionUpdateManyWithoutUserInput
  updatedAt: DateTimeFieldUpdateOperationsInput
}

input UserUpsertWithoutPostsInput {
  create: UserCreateWithoutPostsInput!
  update: UserUpdateWithoutPostsInput!
}

input UserWhereUniqueInput {
  email: String
  id: String
}
